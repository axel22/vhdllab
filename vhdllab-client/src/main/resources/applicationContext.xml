<?xml version="1.0" encoding="UTF-8"?>
<!-- ***************************************************************************
  See the NOTICE file distributed with this work for additional information
  regarding copyright ownership.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
**************************************************************************** -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

  <context:property-placeholder location="server.properties"/>
  <context:component-scan base-package="hr.fer.zemris.vhdllab.platform" />
  <aop:aspectj-autoproxy />

  <bean id="multiInstanceEditorManager"
    class="hr.fer.zemris.vhdllab.platform.manager.editor.impl.MultiInstanceEditorManager"
    abstract="true">
  </bean>

  <bean id="multicastEditorManager"
    class="hr.fer.zemris.vhdllab.platform.manager.editor.impl.MulticastEditorManager"
    abstract="true">
  </bean>

  <bean id="messageSource"
    class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">
      <list>
        <value>ui.messages</value>
        <value>ui.validation</value>
        <value>dialogs</value>
        <value>notifications</value>

        <!-- Custom hibernate validator messages (for validators in vhdllab-common) -->
        <value>ValidatorMessages</value>

        <!-- Default hibernate validator messages -->
        <value>org.hibernate.validator.resources.DefaultValidatorMessages</value>

        <!-- Rich client messages -->
        <value>org.springframework.richclient.application.messages</value>
      </list>
    </property>
  </bean>

  <bean id="httpConnectionManager"
    class="org.apache.commons.httpclient.SimpleHttpConnectionManager" />

<!--  <bean id="httpConnectionManager"-->
<!--    class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager" />-->
<!---->
<!--  <bean id="httpConnectionParams"-->
<!--    class="org.apache.commons.httpclient.params.HttpConnectionManagerParams" factory-bean="httpConnectionManager" factory-method="getParams">-->
<!--    <property name="defaultMaxConnectionsPerHost" value="100"/>-->
<!--    <property name="maxTotalConnections" value="100"/>-->
<!--  </bean>-->

  <bean id="httpClient" class="org.apache.commons.httpclient.HttpClient">
    <constructor-arg ref="httpConnectionManager" />
  </bean>

  <bean id="httpClientRequestExceutor"
    class="hr.fer.zemris.vhdllab.platform.remoting.HttpClientRequestExecutor">
    <constructor-arg ref="httpClient" />
  </bean>

  <bean id="httpInvokerBeanParent"
    class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean"
    abstract="true">
    <property name="httpInvokerRequestExecutor" ref="httpClientRequestExceutor" />
  </bean>

  <bean id="workspaceService" parent="httpInvokerBeanParent">
    <property name="serviceUrl"
      value="https://${host}:${port}/${context}/remoting/workspace.service" />
    <property name="serviceInterface" value="hr.fer.zemris.vhdllab.service.WorkspaceService" />
  </bean>

  <bean id="preferencesFileService" parent="httpInvokerBeanParent">
    <property name="serviceUrl"
      value="https://${host}:${port}/${context}/remoting/preferencesfile.service" />
    <property name="serviceInterface" value="hr.fer.zemris.vhdllab.service.PreferencesFileService" />
  </bean>

  <bean id="clientLogService" parent="httpInvokerBeanParent">
    <property name="serviceUrl"
      value="https://${host}:${port}/${context}/remoting/clientlog.service" />
    <property name="serviceInterface" value="hr.fer.zemris.vhdllab.service.ClientLogService" />
  </bean>

  <bean id="metadataExtractionService" parent="httpInvokerBeanParent">
    <property name="serviceUrl"
      value="https://${host}:${port}/${context}/remoting/metadataextraction.service" />
    <property name="serviceInterface" value="hr.fer.zemris.vhdllab.service.MetadataExtractionService" />
  </bean>

  <bean id="simulator" parent="httpInvokerBeanParent">
    <property name="serviceUrl"
      value="https://${host}:${port}/${context}/remoting/simulator.service" />
    <property name="serviceInterface" value="hr.fer.zemris.vhdllab.service.Simulator" />
  </bean>

</beans>
