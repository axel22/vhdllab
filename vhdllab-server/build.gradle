buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.2.4'
    }
}

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

war.archiveName = 'vhdllab.war'

def fromRootProjectProperty = { name ->
    { line -> line.replace('${' + name + '}', rootProject.ext[name]) }
}

processResources.doFirst {
    if (project.ext.has('ghdl.tmp.dir')) {
        filter fromRootProjectProperty('ghdl.tmp.dir')
    }
    filter fromRootProjectProperty('ghdl.compilation.cmd')
    filter fromRootProjectProperty('ghdl.simulation.cmd')
    filter fromRootProjectProperty('app.context')
}

war {
    from('src/main/webapp') {
        filter fromRootProjectProperty('app.host')
        filter fromRootProjectProperty('app.context')
        filter fromRootProjectProperty('http.port')
        filter fromRootProjectProperty('database.connection.driver')
        filter fromRootProjectProperty('database.connection.url')
        filter fromRootProjectProperty('database.connection.username')
        filter fromRootProjectProperty('database.connection.password')
        filter fromRootProjectProperty('database.connection.validationQuery')
        filter { line -> line.replace('${application.version}', rootProject.version) }
    }

    from "$buildDir/signing"
}

sourceSets {
    main {
        resources {
            def env = project.ext.has('prod') ? 'prod' : 'dev'
            srcDir "src/log4j/$env"
        }
    }
}

configurations {
    antPack200
    testCompile {
        exclude module: 'javax.servlet-api' // servlet api 3.0
    }
}

configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.3.02'
    }
}

dependencies {
    compile project(':vhdllab-common')
    compile 'org.hibernate:hibernate-validator:3.1.0.GA'
    compile 'org.hibernate:hibernate-entitymanager:3.4.0.GA'
    compile 'org.springframework:spring-webmvc:2.5.6'
    compile 'org.springframework:spring-aspects:2.5.6', { exclude(module: 'aspectjrt') }
    compile 'org.springframework:spring-orm:2.5.6'
    compile 'org.springframework:spring-jdbc:2.5.6'

    compile 'org.springframework:spring-aop:2.5.6' // override spring-security-core
    compile 'org.springframework.security:spring-security-core:2.0.5.RELEASE', { exclude(module: 'spring-support') }
    compile 'jaxen:jaxen:1.1.1'

    // http://mail-archives.apache.org/mod_mbox/cocoon-dev/201108.mbox/%3C4E56D857.8060608@indoqa.com%3E
    // http://stackoverflow.com/questions/10482563/aop-java-lang-illegalargumentexception-error-at-0-cant-find-referenced-poi
    compile 'org.aspectj:aspectjweaver:1.6.6'

    compile 'org.apache.commons:commons-exec:1.1'
    providedCompile 'javax.servlet:servlet-api:2.5'
    runtime 'org.hibernate:hibernate-ehcache:3.3.2.GA'
    runtime 'net.sf.ehcache:ehcache:1.6.2'
    runtime 'commons-dbcp:commons-dbcp:1.4'
    runtime 'mysql:mysql-connector-java:5.1.13'
    runtime 'hsqldb:hsqldb:1.8.0.7' // easier development

    // JNLP Download Servlet
    runtime 'org.codehaus.mojo.webstart:webstart-jnlp-servlet:1.0-6.0-02_ea_b02'

    runtime 'org.slf4j:slf4j-log4j12:1.6.1'
    runtime 'log4j:log4j:1.2.14', {
        force = true // because 1.2.15 has weird dependencies
    }
    // spring is not compatible with junit 4.5
    testCompile 'junit:junit:4.4'
    testCompile 'org.springframework:spring-test:2.5.6'
    testCompile 'hsqldb:hsqldb:1.8.0.7'

    antPack200 'org.codehaus.mojo.webstart:webstart-pack200-anttasks:1.2'
}

clean {
    delete rootProject.file(war.archiveName)
}

task copyWarToRootProject(dependsOn: war) << {
    copy {
        from libsDir
        include '*.war'
        into rootProject.projectDir
    }
}

if (project.ext.has('prod')) {
    build.finalizedBy copyWarToRootProject
}

task pack200AndSign(dependsOn: ':vhdllab-client:shadowJar') << {
    ant.taskdef(
        name: 'pack200',
        classname: 'com.sun.tools.apache.ant.pack200.Pack200Task',
        classpath: configurations.antPack200.asPath
    )

    /**
     * pack200 segment size is set to -1 because of bug 5078608
     * http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5078608
     * It seems that this bug is still opened.
     * Environment is: linux 32bit, java 1.6.0_10-b33
     */
    ant.property(name: 'segmentlimit', value: '-1')

    def baseName = project(':vhdllab-client').shadowJar.baseName
    def destName = "$buildDir/signing/${baseName}.jar"

    copy {
        from project(':vhdllab-client').libsDir
        include baseName + '*'
        rename "^$baseName.*", "${baseName}.jar"
        into "$buildDir/signing"
    }

    /**
     * Note: for this to work, repacking destfile must be different from src
     * otherwise Pack (packing task found in standard ant) claims that file is
     * up to date so it won't execute pack200 task. Therefor, this pack and
     * following move tasks are in place to prevent up to date from Pack.
     */
    def changedName = "$buildDir/signing/${baseName}.changed.jar"
    ant.pack200(
        src: destName,
        destfile: changedName,
        repack: 'true',
        segmentlimit: ant.properties.segmentlimit
    )
    assert file(changedName).renameTo(destName)

    ant.signjar(
        jar: destName,
        keystore : rootProject.ext['keystore.location'],
        alias : rootProject.ext['keystore.alias'],
        storepass : rootProject.ext['keystore.password'],
        keypass : rootProject.ext['keystore.keypassword'],
    )

    ant.pack200(
        src: destName,
        destfile: "${destName}.pack.gz",
        gzipoutput: "true",
        segmentlimit: ant.properties.segmentlimit
    )
}

if (project.ext.has('prod')) {
    war.dependsOn pack200AndSign
}

gretty {
    servletContainer = 'jetty8'
    contextPath = '/vhdllab'
    realm 'Preauth Realm'
    realmConfigFile 'src/dev/realm.properties'
    logDir "$buildDir/logs"
    httpsEnabled true
    sslKeyStorePath file('src/dev/devel-keystore')
    sslKeyStorePassword 'vhdllab'
    sslKeyManagerPassword 'vhdllab'
}
